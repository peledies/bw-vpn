#!/bin/bash

CONFIG_FILE="$HOME/.bw-vpn/config"
source $CONFIG_FILE

TERMINAL_HEIGHT=`tput lines`
BOX_HEIGHT=`printf "%.0f" $(echo "scale=2; $TERMINAL_HEIGHT * .5" | bc)`

TERMINAL_WIDTH=`tput cols`
BOX_WIDTH=`printf "%.0f" $(echo "scale=2; $TERMINAL_WIDTH * .75" | bc)`

# Ensure the LastPass CLI is installed so we can secure the users okta password.
if hash lpass 2>/dev/null; then
    echo ""
else
    if (whiptail --yesno "You must install LastPass CLI to use this tool. Do you with to continue?" $BOX_HEIGHT $BOX_WIDTH); then
        if [ "$(uname)" == "Darwin" ]; then
            brew install lastpass-cli
        elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
            sudo apt install lastpass-cli
        fi
    fi
fi

setLastPassEmail() {
    LASTPASS_EMAIL=$(whiptail --inputbox "LastPass email" --nocancel $BOX_HEIGHT $BOX_WIDTH $LASTPASS_EMAIL --title "LastPass Email" 3>&1 1>&2 2>&3)

    if grep -Fq "export LASTPASS_EMAIL=" $CONFIG_FILE
    then
        # we have to add the -i '' argument for mac
        [ "$(uname)" == "Darwin" ] && args="-i ''" || args=""
        `sed $args "s/export LASTPASS_EMAIL.*/export LASTPASS_EMAIL=$LASTPASS_EMAIL/g" $CONFIG_FILE`
    else
        echo "export LASTPASS_EMAIL=$LASTPASS_EMAIL" >> $CONFIG_FILE
    fi
}

setVpnUsername() {
    [  -z "$VPN_USERNAME" ] && USER_SLUG=$(whoami) || USER_SLUG=$VPN_USERNAME
    VPN_USERNAME=$(whiptail --inputbox "VPN Username" --nocancel $BOX_HEIGHT $BOX_WIDTH $USER_SLUG --title "VPN Username" 3>&1 1>&2 2>&3)

    if grep -Fq "export VPN_USERNAME=" $CONFIG_FILE
    then
         # we have to add the -i '' argument for mac
        [ "$(uname)" == "Darwin" ] && args="-i ''" || args=""
        `sed $args "s/export VPN_USERNAME.*/export VPN_USERNAME=$VPN_USERNAME/g" $CONFIG_FILE`
    else
        echo "export VPN_USERNAME=$VPN_USERNAME" >> $CONFIG_FILE
    fi
}

configure() {
    mkdir -p $HOME/.bw-vpn
    touch $CONFIG_FILE

    if [ -z "$LASTPASS_EMAIL" ]; then
        setLastPassEmail
    fi

    if [ -z "$VPN_USERNAME" ]; then
        setVpnUsername
    fi
}

getHostList() {
    IFS=$'\n'
    VPN_HOSTS=$(/opt/cisco/anyconnect/bin/vpn hosts | sed -n 's/.*> //p')

    choices=()
    for host in ${VPN_HOSTS[@]};
    do
        choices+=("$host" "$host")
    done

    VPN_HOST=$(
        whiptail --title "VPN Actions" --noitem --nocancel --menu "Select an item from the menu" $BOX_HEIGHT $BOX_WIDTH 6 ${choices[@]} 3>&2 2>&1 1>&3
    )
}

connect() {
    LASTPASS_STATUS=`lpass status`

    if [ "$LASTPASS_STATUS" == "Not logged in." ]; then
        echo "Autheticating with LastPass"
        lpass login --trust $LASTPASS_EMAIL
    else
        echo "LastPass authenticated"
    fi

    VPN_PASSWORD=`lpass show --password bandwidth.com`

    # read -p 'MFA Code: ' MFA

    /opt/cisco/anyconnect/bin/vpn -s connect "$VPN_HOST" <<EOF
0
$VPN_USERNAME
$VPN_PASSWORD
2
y
EOF
}

disconnect() {
    /opt/cisco/anyconnect/bin/vpn disconnect
    STATE="disconnected"
}

msgBox() {
    whiptail --msgbox "$1" $BOX_HEIGHT $BOX_WIDTH
}

configure

while [ 1 ]
do
CHOICE=$(
whiptail --title "VPN Actions" --nocancel --menu "Select an item from the menu" $BOX_HEIGHT $BOX_WIDTH 6 \
	"1)" "Connection Status"   \
	"2)" "Connect"  \
	"3)" "Disconnect" \
    "4)" "Change LastPass Email" \
    "5)" "Change VPN Username" \
    "x)" "Exit" 3>&2 2>&1 1>&3
)

STATE=`/opt/cisco/anyconnect/bin/vpn state | sed -n 7p | awk '{print $NF}'`

case $CHOICE in
	"1)")
        msgBox "Current VPN state: $STATE"
	;;
	"2)")
        if [ "$STATE" == "Connected" ]; then
            msgBox "VPN Already Connected"
        else
            getHostList
            connect
            msgBox "VPN Connected"
        fi
	;;

	"3)")
        disconnect
        msgBox "VPN Disconnected"
    ;;

    "4)")
        setLastPassEmail
        msgBox "LastPass Email Updated"
    ;;
    "5)")
        setVpnUsername
        msgBox "VPN Username Updated"
    ;;
    "x)")
        exit
    ;;
esac
done
exit