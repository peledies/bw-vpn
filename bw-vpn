#!/usr/bin/env bash

VERSION='1.2.0'

log=/tmp/syncEnvironment.log

CONFIG_FILE="$HOME/.bw-vpn/config"
source $CONFIG_FILE

TERMINAL_HEIGHT=`tput lines`
BOX_HEIGHT=`printf "%.0f" $(echo "scale=2; $TERMINAL_HEIGHT * .5" | bc)`

TERMINAL_WIDTH=`tput cols`
BOX_WIDTH=`printf "%.0f" $(echo "scale=2; $TERMINAL_WIDTH * .75" | bc)`

if hash whiptail 2>/dev/null; then
    echo ""
else
    if [ "$(uname)" == "Darwin" ]; then
        brew install newt
    elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
        sudo apt install whiptail
    fi
fi

if hash dialog 2>/dev/null; then
    echo ""
else
    if [ "$(uname)" == "Darwin" ]; then
        brew install dialog
    elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
        sudo apt install dialog
    fi
fi

showTailBox() {
    # $1 title
    # $2 pid
    # $3 content
	trap "kill $2 2> /dev/null" EXIT

	while kill -0 "$2" 2> /dev/null; do
		dialog --title "$1" --tailbox "$3" $BOX_HEIGHT $BOX_WIDTH
	done

	trap - EXIT
}

ensureLastPassCli() {
    # Ensure the LastPass CLI is installed so we can secure the users okta password.
    if hash lpass 2>/dev/null; then
        echo ""
    else
        if (whiptail --yesno "You must install LastPass CLI to use this tool. Do you with to continue?" $BOX_HEIGHT $BOX_WIDTH); then
            if [ "$(uname)" == "Darwin" ]; then
                brew install lastpass-cli
            elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
                sudo apt install lastpass-cli
            fi
        fi
    fi
}

setConfigValue() {
    if grep -Fq "export $1=" $CONFIG_FILE
    then
        # we have to add the -i '' argument for mac
        [ "$(uname)" == "Darwin" ] && args="-i ''" || args="-i"

        `sed $args "s!export $1.*!export $1=$2!g" $CONFIG_FILE`
    else
        echo "export $1=$2" >> $CONFIG_FILE
    fi
    # this dynamically sets the variable name in the script scope
    printf -v "$1" '%s' "$2"
}

selfUpdate() {
    sudo curl https://raw.githubusercontent.com/peledies/bw-vpn/main/bw-vpn --output /usr/local/bin/bw-vpn && sudo chmod +x /usr/local/bin/bw-vpn
    exit
}

setLastPassKeyName() {
    LASTPASS_KEY_NAME=$(whiptail --inputbox "What is the LastPass record Name where your password is stored" --nocancel $BOX_HEIGHT $BOX_WIDTH $LASTPASS_KEY_NAME --title "LastPass Record Name" 3>&1 1>&2 2>&3)

    setConfigValue "LASTPASS_KEY_NAME" $LASTPASS_KEY_NAME
}

setLastPassEnabled() {
    if (whiptail --yesno "Do you use LastPass for a password manager? If so we can use the stored vpn password." $BOX_HEIGHT $BOX_WIDTH --title "LastPass Enabled" 3>&1 1>&2 2>&3); then
        setConfigValue "LASTPASS_ENABLED" "true"
    else
        setConfigValue "LASTPASS_ENABLED" "false"
    fi
}

setVpnEndpoint() {
    VPN_ENDPOINT=$(whiptail --inputbox "VPN Endpoint" --nocancel $BOX_HEIGHT $BOX_WIDTH $VPN_ENDPOINT --title "VPN Endpoint" 3>&1 1>&2 2>&3)

    setConfigValue "VPN_ENDPOINT" $VPN_ENDPOINT
}

setLastPassEmail() {
    LASTPASS_EMAIL=$(whiptail --inputbox "LastPass Email" --nocancel $BOX_HEIGHT $BOX_WIDTH $LASTPASS_EMAIL --title "LastPass Email" 3>&1 1>&2 2>&3)
    setConfigValue "LASTPASS_EMAIL" $LASTPASS_EMAIL
}

setVpnUsername() {
    [  -z "$VPN_USERNAME" ] && USER_SLUG=$(whoami) || USER_SLUG=$VPN_USERNAME
    VPN_USERNAME=$(whiptail --inputbox "VPN Username" --nocancel $BOX_HEIGHT $BOX_WIDTH $USER_SLUG --title "VPN Username" 3>&1 1>&2 2>&3)
    setConfigValue "VPN_USERNAME" $VPN_USERNAME
}

setVpnGroupNum() {
    VPN_GROUP_NUM=$(whiptail --inputbox "What is the number of the group you would like to use" --nocancel $BOX_HEIGHT $BOX_WIDTH $VPN_GROUP_NUM --title "VPN Group Option Number" 3>&1 1>&2 2>&3)

    setConfigValue "VPN_GROUP_NUM" $VPN_GROUP_NUM
}

setVpnAuthNum() {
    VPN_AUTH_NUM=$(whiptail --inputbox "What is the number of the MFA optoin you would like to use" --nocancel $BOX_HEIGHT $BOX_WIDTH $VPN_AUTH_NUM --title "VPN MFA Option Number" 3>&1 1>&2 2>&3)

    setConfigValue "VPN_AUTH_NUM" $VPN_AUTH_NUM
}


configure() {
    mkdir -p $HOME/.bw-vpn
    touch $CONFIG_FILE

    if [ -z "$LASTPASS_ENABLED" ]; then
        setLastPassEnabled
    fi

    if [ -z "$VPN_USERNAME" ]; then
        setVpnUsername
    fi

    if [ -z "$VPN_ENDPOINT" ]; then
        setVpnEndpoint
    fi

    if $LASTPASS_ENABLED ; then
        ensureLastPassCli

        if [ -z "$LASTPASS_EMAIL" ]; then
            setLastPassEmail
        fi

        if [ -z "$LASTPASS_KEY_NAME" ]; then
            setLastPassKeyName
        fi
    fi
}

connect() {
    if $LASTPASS_ENABLED ; then
        LASTPASS_STATUS=`lpass status`

        if [ "$LASTPASS_STATUS" == "Not logged in." ]; then
            echo "Autheticating with LastPass"
            lpass login --trust $LASTPASS_EMAIL
        else
            echo "LastPass authenticated"
        fi

        VPN_PASSWORD=`lpass show --password $LASTPASS_KEY_NAME`
    else
        VPN_PASSWORD=$(
            whiptail --title "VPN Actions" --passwordbox "VPN Password" $BOX_HEIGHT $BOX_WIDTH 3>&2 2>&1 1>&3
        )
    fi

    # set default selection for the "group name" to 0.
    if [ -z "$VPN_GROUP_NUM" ] ; then
        VPN_GROUP_NUM=0
    fi

    # set default selection for the "MFA method" to 2. Should be okta push notification
    if [ -z "$VPN_AUTH_NUM" ] ; then
        VPN_AUTH_NUM=2
    fi

    /opt/cisco/anyconnect/bin/vpn -s connect $VPN_ENDPOINT << EOF > $log 2>&1 &
$VPN_GROUP_NUM
$VPN_USERNAME
$VPN_PASSWORD
$VPN_AUTH_NUM
y
EOF
    pid=$!

	showTailBox "Connecting to VPN" $pid $log
}

disconnect() {
    /opt/cisco/anyconnect/bin/vpn disconnect > $log 2>&1 &
    pid=$!

	showTailBox "Disconnecting VPN" $pid $log
    STATE="disconnected"
}

msgBox() {
    whiptail --msgbox "$1" $BOX_HEIGHT $BOX_WIDTH
}

configure

configurationMenu() {
    CONFIG_CHOICE=$(
    whiptail --title "VPN Configuration" --nocancel --menu "Select an item from the menu" $BOX_HEIGHT $BOX_WIDTH 8 \
        "1)" "Enable/Disable LastPass" \
        "2)" "Change LastPass Email" \
        "3)" "Change LastPass Key Name" \
        "4)" "Change VPN Endpoint" \
        "5)" "Change VPN Username" \
        "6)" "Set VPN Group" \
        "7)" "Set VPN Auth method number" \
        "x)" "Exit" 3>&2 2>&1 1>&3
    )
    case $CONFIG_CHOICE in
        "1)")
            setLastPassEnabled
            configure
        ;;
        "2)")
            setLastPassEmail
        ;;
        "3)")
            setLastPassKeyName
        ;;
        "4)")
            setVpnEndpoint
        ;;

        "5)")
            setVpnUsername
        ;;

        "6)")
            setVpnGroupNum
        ;;

        "7)")
            setVpnAuthNum
        ;;

        "x)")
        ;;
    esac
}

while [ 1 ]
do
CHOICE=$(
whiptail --title "VPN Actions $VERSION" --nocancel --menu "Select an item from the menu" $BOX_HEIGHT $BOX_WIDTH 6 \
	"1)" "Connection Status"   \
	"2)" "Connect"  \
	"3)" "Disconnect" \
    "4)" "Configuration" \
    "5)" "Update" \
    "x)" "Exit" 3>&2 2>&1 1>&3
)

STATE=`/opt/cisco/anyconnect/bin/vpn state | sed -n 7p | awk '{print $NF}'`

case $CHOICE in
	"1)")
        msgBox "Current VPN state: $STATE"
	;;
	"2)")
        if [ "$STATE" == "Connected" ]; then
            msgBox "VPN Already Connected"
        else
            connect
        fi
	;;

	"3)")
        disconnect
    ;;

    "4)")
        configurationMenu
    ;;
    "5)")
        selfUpdate
    ;;
    "x)")
        exit
    ;;
esac
done
exit